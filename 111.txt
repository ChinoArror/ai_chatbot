## 角色  
你是一位资深前端工程师，擅长使用 Vue 3 + Vite + TS + Tailwind CSS 开发现代 Web 应用。

## 核心需求  
开发一个聊天页面，包含以下功能：
1. **布局**：
   - 页面背景为白色，文字为黑色
   - 使用 `main` 标签包裹内容，宽度在屏幕 >780px 时为 780px，否则为 100%
   - `main` 标签有 20px 的横向内边距，高度为 100vh，内容超出时显示滚动条

2. **输入区域**：
   - 底部固定定位，距离底部 20px
   - 包含一个 `textarea` 输入框和一个发送按钮
   - `textarea` 背景为白色，placeholder 为“你有什么要我帮助的吗？”
   - 发送按钮为蓝色背景，使用 SVG 图标
   - 输入区域整体有 1px 浅灰色边框，宽度为 100%（最大宽度为内容区域宽度）

3. **聊天列表**：
   - 用户聊天气泡：蓝底白字，文字居右，宽度自适应内容
   - AI 聊天气泡：白底黑字，1px 浅灰色边框，文字居左，宽度自适应内容

## 技术栈  
- Vue 3 + Vite + pnpm
- Tailwind CSS（用于快速样式开发）
- 使用 SVG 图标（发送按钮）

## 输出要求 
1. 使用 Tailwind CSS 实现样式
2. 确保布局和样式完全符合需求





我需要你为我的项目接入aibot具体要求如下：
1. **功能扩展**：
   - 在现有聊天页面中集成 LangChain.js，实现与 AI 的对话功能。
   - 支持流式响应（Streaming Response），提升用户体验。

2. **环境配置**：
   - 使用 `.env` 文件管理 API 配置，包括 `API_BASE_URL` 和 `API_KEY`以及`Model`。
   - 确保环境变量在开发和生产环境中均可使用。

3. **技术栈**：
   - Vue 3 + Vite + pnpm
   - Tailwind CSS（用于样式）
   - LangChain.js（用于 AI 对话逻辑）

**输出要求**  
1. `.env` 文件示例
2. LangChain.js 集成逻辑
3. 流式响应实现代码





**角色**  
你是一位资深前端工程师，擅长使用 Vue 3 + TypeScript + Tailwind CSS 开发现代 Web 应用。

**核心需求**  
1. **功能扩展**：
   - 在输入框上方添加一个 `Dropdown` 下拉框菜单，用于切换不同平台的 AI 模型。
   - 按钮大小为 30x30px，使用设置图标（SVG）。
   - 点击按钮后显示模型列表，点击列表项切换模型。

2. **模型配置**：
   - 新建 `src/config/models.ts` 文件，存放不同平台的 AI 模型配置。
   - 从环境变量中读取 API 密钥、基础 URL 和模型名称。

3. **环境变量**：
   - 修改 `.env` 文件，支持 DeepSeek 和 Zhipu 两种模型配置。

4. **代码优化**：
   - 使用 TypeScript 实现强类型检查。
   - 封装 `Dropdown` 组件，提升代码复用性。

**技术栈**  
- Vue 3 + Vite + pnpm
- TypeScript
- Tailwind CSS（用于样式）
- Axios（用于 API 调用）

**输出要求**  
1. 完整的 Vue 组件代码（ChatPage.vue）
2. `Dropdown` 组件代码
3. `models.ts` 配置文件
4. 更新后的 `.env` 文件



请你给这个项目添加暗黑模式
1. **暗黑模式切换**：
   - 新增一个切换按钮，圆形，大小为 45x45px，定位在 `main` 标签内容的右上角。
   - 按钮图标在 Light 模式下显示月亮（Moon），Dark 模式下显示太阳（Sun）。
   - 点击按钮切换 Light/Dark 模式。

2. **主题颜色**：
   - 主题色：`#3662e3`（用于按钮、链接等）。
   - Light 模式背景色：`#fafafa`，文字颜色：`#09090b`。
   - Dark 模式背景色：`#09090b`，文字颜色：`#fafafa`。

3. **技术栈**：
   - Vue 3 + Vite + pnpm
   - Tailwind CSS（用于样式）
   - SVG 图标（用于按钮）

**输出要求**  
1. 完整的 Vue 组件代码（DarkModeToggle.vue）
2. 更新后的 `main` 标签样式
3. 主题颜色配置
